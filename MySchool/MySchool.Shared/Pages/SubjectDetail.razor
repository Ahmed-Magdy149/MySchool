@page "/subject/{SubjectId:int}"
@using MySchool.Shared.Models
@inject NavigationManager NavigationManager

<PageTitle>@subject?.Name - MySchool</PageTitle>

<div class="container mt-4">
    @if (subject != null)
    {
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>@subject.Name</h1>
            <button class="btn btn-outline-primary" @onclick="GoBack">
                <i class="bi bi-arrow-left"></i> العودة
            </button>
        </div>

        <p class="lead mb-4">@subject.Description</p>

        <h2 class="mb-3">الوحدات التعليمية</h2>

        <div class="row">
            @foreach (var moduleType in Enum.GetValues<ModuleType>())
            {
                var modulesOfType = modules.Where(m => m.Type == moduleType).ToList();
                if (modulesOfType.Any())
                {
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-header bg-primary text-white">
                                <h3 class="mb-0">@GetModuleTypeName(moduleType)</h3>
                            </div>
                            <div class="card-body">
                                <div class="list-group">
                                    @foreach (var module in modulesOfType)
                                    {
                                        <button class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"
                                                @onclick="() => SelectModule(module)">
                                            <span>@module.Title</span>
                                            <i class="bi bi-chevron-right"></i>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    }
    else
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">جاري تحميل المادة...</p>
        </div>
    }
</div>

@code {
    [Parameter]
    public int SubjectId { get; set; }

    private Subject? subject;
    private List<Module> modules = new List<Module>();

    protected override void OnInitialized()
    {
        // In a real app, this would fetch data from a service
        LoadSubject();
        LoadModules();
    }

    private void LoadSubject()
    {
        // Simulating data fetch - in a real app, this would come from a service
        subject = new Subject
        {
            Id = SubjectId,
            Name = GetSubjectName(SubjectId),
            Description = "This subject provides comprehensive learning materials including vocabulary, grammar, quizzes, and exams to help students master the subject effectively."
        };
    }

    private string GetSubjectName(int id)
    {
        return id switch
        {
            1 => "English",
            2 => "Mathematics",
            3 => "Science",
            4 => "History",
            5 => "Geography",
            6 => "Computer Science",
            _ => "Unknown Subject"
        };
    }

    private void LoadModules()
    {
        // Simulating data fetch - in a real app, this would come from a service
        modules = new List<Module>
        {
            new Module { Id = 1, SubjectId = SubjectId, Title = "Basic Concepts", Description = "Introduction to fundamental concepts", Type = ModuleType.Vocabulary, Order = 1 },
            new Module { Id = 2, SubjectId = SubjectId, Title = "Intermediate Concepts", Description = "Building on basic knowledge", Type = ModuleType.Vocabulary, Order = 2 },
            new Module { Id = 3, SubjectId = SubjectId, Title = "Advanced Concepts", Description = "Complex and specialized topics", Type = ModuleType.Vocabulary, Order = 3 },
            
            new Module { Id = 4, SubjectId = SubjectId, Title = "Basic Rules", Description = "Fundamental rules and structures", Type = ModuleType.Grammar, Order = 1 },
            new Module { Id = 5, SubjectId = SubjectId, Title = "Intermediate Rules", Description = "More complex rules and applications", Type = ModuleType.Grammar, Order = 2 },
            
            new Module { Id = 6, SubjectId = SubjectId, Title = "Practice Quiz 1", Description = "Test your basic knowledge", Type = ModuleType.Quiz, Order = 1 },
            new Module { Id = 7, SubjectId = SubjectId, Title = "Practice Quiz 2", Description = "Test your intermediate knowledge", Type = ModuleType.Quiz, Order = 2 },
            
            new Module { Id = 8, SubjectId = SubjectId, Title = "Midterm Exam", Description = "Comprehensive assessment of first half", Type = ModuleType.Exam, Order = 1 },
            new Module { Id = 9, SubjectId = SubjectId, Title = "Final Exam", Description = "Comprehensive assessment of all material", Type = ModuleType.Exam, Order = 2 }
        };
    }

    private string GetModuleTypeName(ModuleType type)
    {
        return type switch
        {
            ModuleType.Vocabulary => "المفردات",
            ModuleType.Grammar => "القواعد",
            ModuleType.Quiz => "الاختبارات القصيرة",
            ModuleType.Exam => "الامتحانات",
            _ => type.ToString()
        };
    }

    private void SelectModule(Module module)
    {
        // Navigate to the module content page
        NavigationManager.NavigateTo($"/module/{module.Id}");
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }
}
